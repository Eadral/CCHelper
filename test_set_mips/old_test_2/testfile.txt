int intarray[10];

int recursivebinarysearch(int begin, int end, int target) {
  int middle;

  if (begin >= end)
    return (-1);

  middle = begin + (end - begin) / 2;
  if (intarray[middle] > target)
    return (recursivebinarysearch(begin, middle, target));
  if (intarray[middle] < target)
    return (recursivebinarysearch(middle + 1, end, target));
  return (middle);
}

int iterativebinarysearch(int begin, int end, int target) {
  int middle;

  while (begin < end) {
    middle = begin + (end - begin) / 2;
    if (intarray[middle] < target)
      begin = middle + 1;
    else if (intarray[middle] > target)
      end = middle;
    else
      return (middle);
  }

  return (-1);
}

void initializeintarray() {
  intarray[0] = 0;
  intarray[1] = 1;
  intarray[2] = 2;
  intarray[3] = 3;
  intarray[4] = 4;
  intarray[5] = 5;
  intarray[6] = 6;
  intarray[7] = 7;
  intarray[8] = 8;
  intarray[9] = 9;
}

void testibs(int a) {
  printf("test iterativebinarysearch:");
  printf("expected 1: ", iterativebinarysearch(0, 10, 1));
  printf("expected 5: ", iterativebinarysearch(0, 10, 5));
  printf("expected 7: ", iterativebinarysearch(0, 10, 7));
  printf("expected -1: ", iterativebinarysearch(0, 10, 10));
}

void testrbs(int a) {
  printf("test recursivebinarysearch:");
  printf("expected 1: ", recursivebinarysearch(0, 10, 1));
  printf("expected 5: ", recursivebinarysearch(0, 10, 5));
  printf("expected 7: ", recursivebinarysearch(0, 10, 7));
  printf("expected -1: ", recursivebinarysearch(0, 10, 10));
}

void main() {
  initializeintarray();
  testibs(0);
  testrbs(0);
}